
import java.awt.Color;
import java.awt.Font;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;

public class AdminHomeDashBoaedQuize extends javax.swing.JFrame {

    LinkedList<Player> players = new LinkedList<>();

    public AdminHomeDashBoaedQuize() {
        initComponents();
        setTotalOfPlayers();
        setTotalOfQuiz();
        setSize(805, 630);
        List<String> playerNames = Arrays.asList("John", "Alice", "Bob");
        List<Integer> playerScores = Arrays.asList(100, 200, 150);

// Create a LinkedList to store player information
        LinkedList<Player> players = new LinkedList<>();

// Iterate over the player names and scores
        for (int i = 0; i < playerNames.size(); i++) {
            String playerName = playerNames.get(i);
            int playerScore = playerScores.get(i);

            // Create a new Player object and add it to the LinkedList
            Player player = new Player(playerName, playerScore);
            players.add(player);
        }

//totalofplayer.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        javax.swing.JPanel totalofplayer = new javax.swing.JPanel();
        totalofplayer.setLayout(new javax.swing.BoxLayout(totalofplayer, javax.swing.BoxLayout.Y_AXIS));

        int playerCount = Player.getPlayerCount();  // Get the player count
        javax.swing.JLabel countLabel = new javax.swing.JLabel("Total Players: " + playerCount);
        countLabel.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 20));
        countLabel.setForeground(java.awt.Color.BLUE);
        totalofplayer.add(countLabel);
//int playerCount = Player.getPlayerCount();
//countLabel.setFont(new Font("Arial", Font.BOLD, 20));
//countLabel.setForeground(Color.BLUE);       
        A_profile.setOpaque(false);
        A_profile.setContentAreaFilled(false);
        A_profile.setBorderPainted(false);

        //button lesson 
        QS_admin.setOpaque(false);
        QS_admin.setContentAreaFilled(false);
        QS_admin.setBorderPainted(false);

        AmineCreater.setOpaque(false);
        AmineCreater.setContentAreaFilled(false);
        AmineCreater.setBorderPainted(false);

        WWC_BfromAdmin.setOpaque(false);
        WWC_BfromAdmin.setContentAreaFilled(false);
        WWC_BfromAdmin.setBorderPainted(false);

        player_Admin_mange.setOpaque(false);
        player_Admin_mange.setContentAreaFilled(false);
        player_Admin_mange.setBorderPainted(false);

        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        for (Player player : players) {
            String playerName = player.getName();
            int playerScore = player.getScore();

            String playerInfo = playerName + ": " + playerScore;
            JLabel label = new JLabel(playerInfo);

            panel.add(label);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        player_Admin_mange = new javax.swing.JButton();
        QS_admin = new javax.swing.JButton();
        WWC_BfromAdmin = new javax.swing.JButton();
        A_profile = new javax.swing.JButton();
        AmineCreater = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        totalOfPlayersLabel = new javax.swing.JLabel();
        totalOfQuizLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AdminHomeDashBoaedQuize");
        getContentPane().setLayout(null);

        player_Admin_mange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player_Admin_mangeActionPerformed(evt);
            }
        });
        getContentPane().add(player_Admin_mange);
        player_Admin_mange.setBounds(10, 210, 210, 80);

        QS_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QS_adminActionPerformed(evt);
            }
        });
        getContentPane().add(QS_admin);
        QS_admin.setBounds(10, 300, 210, 80);

        WWC_BfromAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WWC_BfromAdminActionPerformed(evt);
            }
        });
        getContentPane().add(WWC_BfromAdmin);
        WWC_BfromAdmin.setBounds(10, 390, 210, 80);

        A_profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_profileActionPerformed(evt);
            }
        });
        getContentPane().add(A_profile);
        A_profile.setBounds(0, 0, 100, 80);

        AmineCreater.setToolTipText("admine createar");
        AmineCreater.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AmineCreater.setFocusTraversalPolicyProvider(true);
        AmineCreater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmineCreaterActionPerformed(evt);
            }
        });
        getContentPane().add(AmineCreater);
        AmineCreater.setBounds(70, 480, 90, 80);
        getContentPane().add(panel);
        panel.setBounds(260, 320, 510, 250);

        totalOfPlayersLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalOfPlayersLabel.setForeground(new java.awt.Color(255, 102, 0));
        totalOfPlayersLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalOfPlayersLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(totalOfPlayersLabel);
        totalOfPlayersLabel.setBounds(300, 150, 80, 60);

        totalOfQuizLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalOfQuizLabel.setForeground(new java.awt.Color(255, 102, 0));
        totalOfQuizLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalOfQuizLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(totalOfQuizLabel);
        totalOfQuizLabel.setBounds(600, 150, 80, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AdminHomeInterfaceQuize.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QS_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QS_adminActionPerformed
        // Close the current frame
        dispose();
        Adminquizsystemfrasme addQuizeFrame = new Adminquizsystemfrasme();
        addQuizeFrame.setLocationRelativeTo(null);
        addQuizeFrame.setVisible(true);
    }//GEN-LAST:event_QS_adminActionPerformed

    private void WWC_BfromAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WWC_BfromAdminActionPerformed

        String message = "<html><body><p style='font-size:16px;'>You will be signed out<br>and go to a worldwide competition.</p></body></html>";

        // Create a JLabel with the custom-styled message
        JLabel messageLabel = new JLabel(message);

        int choice = JOptionPane.showOptionDialog(null, messageLabel, "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
//int choice = JOptionPane.showConfirmDialog(null, "You will be signed out and go to a worldwide competition.", "Warning", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            dispose();
            // Open a new frame or perform any desired action
            WWC_frame addQuizeFrame = new WWC_frame();
            addQuizeFrame.setLocationRelativeTo(null);
            addQuizeFrame.setVisible(true);
        }

//                
//                 // Close the current frame
//            dispose();
//         WWC_frame addQuizeFrame = new  WWC_frame();
//        addQuizeFrame.setLocationRelativeTo(null);
//    addQuizeFrame.setVisible(true);
    }//GEN-LAST:event_WWC_BfromAdminActionPerformed

    private void player_Admin_mangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player_Admin_mangeActionPerformed

        // Close the current frame
        dispose();
        Admin_mangeplayerr addQuizeFrame = new Admin_mangeplayerr();
        addQuizeFrame.setLocationRelativeTo(null);
        addQuizeFrame.setVisible(true);
    }//GEN-LAST:event_player_Admin_mangeActionPerformed

    private void A_profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_profileActionPerformed
        dispose();
        AdminProfile addQuizeFrame = new AdminProfile();
        addQuizeFrame.setLocationRelativeTo(null);
        addQuizeFrame.setVisible(true);
    }//GEN-LAST:event_A_profileActionPerformed

    private void AmineCreaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmineCreaterActionPerformed
        dispose();
        Admins_name addQuizeFrame = new Admins_name();
        addQuizeFrame.setLocationRelativeTo(null);
        addQuizeFrame.setVisible(true);
    }//GEN-LAST:event_AmineCreaterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdminHomeDashBoaedQuize frame = new AdminHomeDashBoaedQuize();
                frame.setLocationRelativeTo(null); // Center the frame on the screen
                frame.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A_profile;
    private javax.swing.JButton AmineCreater;
    private javax.swing.JButton QS_admin;
    private javax.swing.JButton WWC_BfromAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel;
    private javax.swing.JButton player_Admin_mange;
    private javax.swing.JLabel totalOfPlayersLabel;
    private javax.swing.JLabel totalOfQuizLabel;
    // End of variables declaration//GEN-END:variables

    private static class Player {

        private String name;
        private int score;
        private static int playerCount = 0;

        public Player(String name, int score) {
            this.name = name;
            this.score = score;
            playerCount++;
        }

        public String getName() {
            return name;
        }

        public int getScore() {
            return score;
        }

        public static int getPlayerCount() {
            return playerCount;
        }
    }

    public void setTotalOfPlayers() {
        Connection dbcon = DigitalStepsMain.connectDB();

        if (dbcon != null) {

            String sql = "SELECT COUNT(*) AS TotalPlayers FROM Player";
            try {
                PreparedStatement st = dbcon.prepareStatement(sql);
                ResultSet rs = st.executeQuery();
                if (rs.next()) {
                    int totalPlayers = rs.getInt("TotalPlayers"); // Retrieve the total count from the result set
                    String total = String.valueOf(totalPlayers);
                    totalOfPlayersLabel.setText(total);
                }
                rs.close();
                st.close();
            } catch (SQLException ex) {
                Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void setTotalOfQuiz() {
        Connection dbcon = DigitalStepsMain.connectDB();

        if (dbcon != null) {

            String sql = "SELECT COUNT(*) AS TotalQuizzes FROM Quiz";
            try {
                PreparedStatement st = dbcon.prepareStatement(sql);
                ResultSet rs = st.executeQuery();
                if (rs.next()) {
                    int TotalQuizzes = rs.getInt("TotalQuizzes"); // Retrieve the total count from the result set
                    String total = String.valueOf(TotalQuizzes);
                    totalOfQuizLabel.setText(total);
                }
                rs.close();
                st.close();
            } catch (SQLException ex) {
                Logger.getLogger(AdminHomeDashBoaedQuize.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
}
